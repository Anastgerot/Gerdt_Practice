Описание:

Данный скрипт предназначен для автоматического определения языков в текстовых файлах, содержащих тексты на нескольких языках. 
Он анализирует каждый абзац текста, определяет язык, и сохраняет результаты в отдельные файлы по языкам.

Функциональность:

1. Загрузка всех файлов с расширением .txt из указанной директории.

2. Разделение текста каждого файла на абзацы (по двум и более переводам строки).

3. Определение языка каждого абзаца с использованием библиотеки Lingua и, при необходимости, Langid.

4. Объединение соседних абзацев, написанных на одном языке.

5. Дополнительная обработка коротких абзацев с уточнением языка.

6. При обнаружении одного языка с высокой уверенностью (0.98 и выше) — вывод всего текста в один файл.

7. Иначе — вывод отдельных абзацев в файлы по языкам.

Как использовать:

Установите зависимости:
pip install lingua-lang
pip install langid
pip install numpy
pip install pydantic

Разместите входные текстовые файлы (.txt) в директории по умолчанию (Examples) или создайте другую.

Запустите скрипт в терминале:
python main.py [-i входная_папка] [-o выходная_папка] [-c порог_уверенности]

Параметры:
-i, --input-dir директория с входными .txt файлами (по умолчанию: Examples)
-o, --output-dir директория для сохранения результатов (по умолчанию: Results)
-c, --min-confidence минимальный порог уверенности для классификации (по умолчанию: 0.9)

Пример запуска:
python main.py -i Examples -o Results -c 0.92

Входные данные:
В качестве входных данных используются текстовые файлы в кодировке UTF-8. 
Каждый файл должен содержать текст, разделённый на абзацы с помощью пустых строк.

Выходные данные:
В результате работы скрипта в указанной выходной директории появятся файлы с названиями вида:
<имя_входного_файла>_<код_языка>.txt

Дополнительно:
В директории Examples находится 3 текстовых файла (.txt):
1. Dogovor.txt - текст на русском и казахском языках.
2. Ru.txt - текст на русском языке.
3. Ru_En_KK.txt - текст на русском, английском и казахском языках.
